<?php
function cipher_menu() {
    $items = array();
    $items['encrypt'] = array(
            'title' => 'Encrypt',
            'type' => MENU_NORMAL_ITEM,
            'access callback' => TRUE,
            'page callback' => 'drupal_get_form',
            'page arguments' => array('encrypt_form'),
        );
        $items['encrypt_success'] = array(
                'title' => 'Your Encrypted Phrase',
                'type' => MENU_CALLBACK,
                'access callback' => true,
                'page callback' => 'encrypt_success',
            );
    return $items;
}

function encrypt_form() {
    $form = array();
    $form['value'] = array(
            '#type' => 'textfield',
            '#title' => 'Shift Value',
            '#description' => 'Enter a positive integer',
            '#element_validate' => array('element_validate_integer_positive'),
            '#required' => TRUE,
        );
    $form['direction'] = array(
            '#type' => 'textfield',
            '#title' => 'Shift Direction',
            '#description' => "Specify 'left' or 'right'",
            '#element_validate' => array('direction_validate'),
            '#required' => TRUE,
        );
    $form['phrase'] = array(
            '#type' => 'textfield',
            '#title' => 'Phrase',
            '#description' => 'Enter the phrase you would like to encrypt<br>* Use only letters and approved punctuation: . , ! ? : ; \' "',
            '#element_validate' => array('phrase_validate'),
            '#required' => TRUE,
        );
    $form['submit'] = array(
            '#type' => 'submit',
            '#value' => 'Encrypt Phrase',
        );
    return $form;
}

function phrase_validate($element) {
    $phrase = $element['#value'];
    // find how many characters match the regular expression
    $matching_characters = preg_match_all('/[a-zA-Z ,.!?:;\'\"]/', $phrase);
    if ($matching_characters != strlen($phrase)) {
        form_error($element, t("Your phrase includes unallowed characters."));
    }
}

function direction_validate($element) {
    $direction = $element['#value'];
    $valid_directions = array('left', 'right');
    if (!in_array($direction, $valid_directions)) {
        form_error($element, t("Shift Direction invalid. Please enter 'left' or 'right'"));
    }
}

function encrypt_form_submit($form, &$form_state) {
    $value = $form_state['values']['value'];
    $direction = $form_state['values']['direction'];
    $phrase = $form_state['values']['phrase'];
    $encrypted_chars = array();
    $phrase_chars = str_split($phrase);

    // if it loops through the alphabet more than once, cut off the extra
    $modded_value = $value % 26;

    foreach($phrase_chars as $char) {
        $char_code = ord($char);
        // if character is an uppercase letter
        if ($char_code >= 65 && $char_code <= 90) {
            $new_code;
            // adjust character code left or right
            if ($direction == 'left') {
                $new_code = $char_code - $modded_value;
            } else {
                $new_code = $char_code + $modded_value;
            }
            // correct for overadjustments
            if ($new_code > 90) {
                $new_code = 64 + ($new_code - 90);
            } elseif ($new_code < 65) {
                $new_code = 91 - (65 - $new_code);
            }
            // add the new character to the array
            $encrypted_chars[] = chr($new_code);
        } elseif ($char_code >= 97 && $char_code <= 122) {
            // character is a lowercase letter
            $encrypted_chars[] = chr($char_code + $modded_value);
        } else {
            $encrypted_chars[] = chr($char_code);
        }
    }

    echo "<pre>";
    echo "$phrase <br>";
    echo implode($encrypted_chars);
    echo "</pre>";
    exit;

    $_SESSION['value'] = $form_state['values']['value'];
    $_SESSION['direction'] = $form_state['values']['direction'];
    $_SESSION['phrase'] = $form_state['values']['phrase'];
    $form_state['redirect'] = 'encrypt_success';
}

function encrypt_success() {
    $value = $_SESSION['value'];
    $direction = $_SESSION['direction'];
    $phrase = $_SESSION['phrase'];
    return "Value: $value <br>Direction: $direction <br>Phrase: $phrase";
}
